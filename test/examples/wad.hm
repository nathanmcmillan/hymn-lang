use "strings"

func wad-skip(s, i) {
  i += 1
  set c = s[i]
  if c != '\n' and c != ' ' {
    return i - 1
  }
  set size = len(s)
  while true {
    i += 1
    if i == size {
      return i
    }
    c = s[i]
    if c != '\n' and c != ' ' {
      return i - 1
    }
  }
}

func load-wad(s) {
  set wad = {}
  set stack = [wad]
  set key = ""
  set value = ""
  set pc = ""
  set is-key = true
  set size = len(s)
  for i = 0, i < size {
    set c = s[i]
    if c == '#' {
      pc = c
      i += 1
      while i < size and s[i] != '\n' {
        i += 1
      }
    } elif c == '\n' or c == ' ' {
      if !is-key and pc != '}' and pc != ']' {
        if type(stack[0]) == "array" {
          push(stack[0], value)
        } else {
          stack[0][trim(key)] = value
          key = ""
          is-key = true
        }
        value = ""
      }
      pc = c
      i = wad-skip(s, i)
    } elif c == '=' {
      is-key = false
      pc = c
      i = wad-skip(s, i)
    } elif c == '{' {
      set map = {}
      if type(stack[0]) == "array" {
        push(stack[0], map)
        is-key = true
      } else {
        stack[0][trim(key)] = map
        key = ""
      }
      insert(stack, 0, map)
      pc = c
      i = wad-skip(s, i)
    } elif c == '[' {
      set array = []
      if type(stack[0]) == "array" {
        push(stack[0], array)
        is-key = true
      } else {
        stack[0][trim(key)] = array
        key = ""
      }
      insert(stack, 0, array)
      is-key = false
      pc = c
      i = wad-skip(s, i)
    } elif c == '}' {
      if pc != ' ' and pc != '{' and pc != '}' and pc != ']' and pc != '\n' {
        stack[0][trim(key)] = value
        key = ""
        value = ""
      }
      delete(stack, 0)
      is-key = type(stack[0]) != "array"
      pc = c
      i = wad-skip(s, i)
    } elif c == ']' {
      if pc != ' ' and pc != '[' and pc != ']' and pc != '}' and pc != '\n' {
        push(stack[0], value)
        value = ""
      }
      delete(stack, 0)
      is-key = type(stack[0]) != "array"
      pc = c
      i = wad-skip(s, i)
    } elif c == '"' {
      i += 1
      if i == size {
        break
      }
      set e = s[i]
      while i < size {
        if e == '"' or e == '\n' {
          break
        } elif e == '\\' and i + 1 < size and s[i + 1] == '"' {
          value += '"'
          i = i + 2
          e = s[i]
        } else {
          value += e
          i += 1
          e = s[i]
        }
      }
    } elif is-key {
      pc = c
      key += c
    } else {
      pc = c
      value += c
    }
  }
  if pc != ' ' and pc != ']' and pc != '}' and pc != '\n' {
    stack[0][trim(key)] = value
  }
  echo wad
  return wad
}

set tic = "paint = tic-80-wide-font columns = 128 rows = 128 pixels [
  0 7 7 7 0 0
  7 7 7 7 0 0
]
"

load-wad(tic)
