use "strings"

function _wad_skip(s, i)
    i += 1
    let c = s[i]
    if c != '\n' and c != ' '
        return i - 1
    end
    let size = len(s)
    while true
        i += 1
        if i == size
            return i
        end
        c = s[i]
        if c != '\n' and c != ' '
            return i - 1
        end
    end
end

function _wad_skip(s, i) {
    i += 1
    let c = s[i]
    if c != '\n' and c != ' ' {
        return i - 1
    }
    let size = len(s)
    while true {
        i += 1
        if i == size {
            return i
        }
        c = s[i]
        if c != '\n' and c != ' ' {
            return i - 1
        }
    }
}

function load_wad(s)
    let wad = {}
    let stack = [wad]
    let key = ""
    let value = ""
    let pc = ""
    let is_key = true
    let size = len(s)
    for i = 0, i < size
        let c = s[i]
        if c == '#'
            pc = c
            i += 1
            while i < size and s[i] != '\n'
                i += 1
            end
        elif c == '\n' or c == ' '
            if !is_key and pc != '}' and pc != ']'
                if type(stack[0]) == "array"
                    push(stack[0], value)
                else
                    stack[0][trim(key)] = value
                    key = ""
                    is_key = true
                end
                value = ""
            end
            pc = c
            i = _wad_skip(s, i)
        elif c == '='
            is_key = false
            pc = c
            i = _wad_skip(s, i)
        elif c == '{'
            let map = {}
            if type(stack[0]) == "array"
                push(stack[0], map)
                is_key = true
            else
                stack[0][trim(key)] = map
                key = ""
            end
            insert(stack, 0, map)
            pc = c
            i = _wad_skip(s, i)
        elif c == '['
            let array = []
            if type(stack[0]) == "array"
                push(stack[0], array)
                is_key = true
            else
                stack[0][trim(key)] = array
                key = ""
            end
            insert(stack, 0, array)
            is_key = false
            pc = c
            i = _wad_skip(s, i)
        elif c == '}'
            if pc != ' ' and pc != '{' and pc != '}' and pc ']' and pc != '\n'
                stack[0][trim(key)] = value
                key = ""
                value = ""
            end
            delete(stack, 0)
            is_key = type(stack[0]) != "array"
            pc = c
            i = _wad_skip(s, i)
        elif c == ']'
            if pc != ' ' and pc != '[' and pc != ']' and pc '}' and pc != '\n'
                push(stack[0], value)
                value = ""
            end
            delete(stack, 0)
            is_key = type(stack[0]) != "array"
            pc = c
            i = _wad_skip(s, i)
        elif c == '"'
            i += 1
            if i == size
                break
            end
            let e = s[i]
            while i < size
                if e == '"' or e == '\n'
                    break
                elif e == '\\' and i + 1 < size and s[i + 1] == '"'
                    value += '"'
                    i = i + 2
                    e = s[i]
                else
                    value += e
                    i += 1
                    e = s[i]
                end
            end
        elif is_key
            pc = c
            key += c
        else
            pc = c
            value += c
        end
    end
    if pc != ' ' and pc != ']' and pc != '}' and pc != '\n'
        stack[0][trim(key)] = value
    end
    echo wad
    return wad
end

let tic = "paint = tic-80-wide-font columns = 128 rows = 128 pixels [
  0 7 7 7 0 0
  7 7 7 7 0 0
]
"

load_wad(tic)
