#!/usr/bin/env hymn

let foo = 0

try let mem = {} 10 + {} except _ print(_) end
try let mem = {} 10 + [] except _ print(_) end

try let mem = {} 10 * {} except _ print(_) end
try let mem = {} 10 * [] except _ print(_) end

try let mem = {} index({}, 0) except _ print(_) end
try let mem = {} no except _ print(_) end
try let mem = {} let arg = [] arg.foo except _ print(_) end
try let mem = {} let arg = 0 len(arg) except _ print(_) end
try let mem = {} let arg = 0 arg[0] except _ print(_) end
try let mem = {} let arg = [] arg[0.0] except _ print(_) end
try let mem = {} let arg = [] arg() except _ print(_) end
try let mem = {} let arg = {} push(arg, 0) except _ print(_) end
try let mem = {} let arg = {} pop(arg) except _ print(_) end
try let mem = {} let arg = [] insert(arg, "", 0) except _ print(_) end
try let mem = {} let arg = {} insert(arg, 0, 0) except _ print(_) end
try let mem = {} let arg = [] insert(arg, -1, 0) except _ print(_) end
try let mem = {} let arg = [] insert(arg, 10, 0) except _ print(_) end
try let mem = {} let arg = [] delete(arg, "") except _ print(_) end
try let mem = {} let arg = {} delete(arg, 0) except _ print(_) end
try let mem = {} let arg = "" delete(arg, 0) except _ print(_) end
try let mem = {} let arg = "" arg[:] except _ print(_) end
try let mem = {} let arg = [] arg[10:20] except _ print(_) end
try let mem = {} let arg = [] arg["":""] except _ print(_) end
try let mem = {} let arg = [] keys(arg) except _ print(_) end
try let mem = {} let arg = [] int(arg) except _ print(_) end
try let mem = {} let arg = [] float(arg) except _ print(_) end
try let mem = {} do [] except _ print(_) end
try let mem = {} use [] except _ print(_) end

function bad_function() let a = [0, 2, 4] end

try let b = bad_function() b[0] = b[0] + 1 except _ print(_) end

print "done!"
